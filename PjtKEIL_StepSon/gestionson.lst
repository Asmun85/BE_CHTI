


ARM Macro Assembler    Page 1 


    1 00000000                 PRESERVE8
    2 00000000                 THUMB
    3 00000000         
    4 00000000                 EXPORT           CallbackSon
    5 00000000                 EXPORT           StartSon
    6 00000000                 EXPORT           SortieSon
    7 00000000                 EXPORT           Index
    8 00000000                 import           Son
    9 00000000                 import           LongueurSon
   10 00000000                 include          Driver/DriverJeuLaser.inc 
                                                            ;pour PWM
    1 00000000         
    2 00000000         ; Bibliotheque DriverJeuLaser (ancienne gassp72 adaptée 
                       2021 - TR)
    3 00000000         ; Accès en aux fonctions suivantes :
    4 00000000         ; GPIO :
    5 00000000         ; GPIOA_Set(char Broche), GPIOB_Set(char Broche), GPIOC_
                       Set(char Broche)
    6 00000000         ; GPIOA_Clear(char Broche), GPIOB_Clear(char Broche), GP
                       IOC_Clear(char Broche)
    7 00000000         
    8 00000000         ; PWM :
    9 00000000         ;/**
   10 00000000         ; * @brief  Fixe une valeur de PWM, Val, en tick horloge
                       . La rapport cyclique effectif
   11 00000000         ; * est donc : rcy = Thaut_ticks / Periode_ticks
   12 00000000         ; * @note   spécifique Jeu Laser, PWM liée exclusivement
                        au TIM3, chan3
   13 00000000         ; * @param  Thaut_ticks : durée de l'état haut d'une imp
                       ulsion en Ticks
   14 00000000         ;  * @retval None
   15 00000000         ; */
   16 00000000         
   17 00000000         ;void PWM_Set_Value_TIM3_Ch3( unsigned short int Thaut_t
                       icks);
   18 00000000                 import           PWM_Set_Value_TIM3_Ch3
   19 00000000         
   20 00000000         
   21 00000000         
   22 00000000         ;/**
   23 00000000         ; * @brief  Mise à 1 d'une broche GPIO 
   24 00000000         ;  * @note   Une fonction par GPIO
   25 00000000         ; * @param  Broche : 0 à 15
   26 00000000         ; * @retval None
   27 00000000         ; */
   28 00000000         
   29 00000000         ;void GPIOA_Set(char Broche);
   30 00000000                 import           GPIOA_Set
   31 00000000         
   32 00000000         ;void GPIOB_Set(char Broche);
   33 00000000                 import           GPIOB_Set
   34 00000000         
   35 00000000         ;void GPIOC_Set(char Broche);
   36 00000000                 import           GPIOC_Set
   37 00000000         
   38 00000000         
   39 00000000         
   40 00000000         ;/**
   41 00000000         ; * @brief  Mise à 0 d'une broche GPIO 



ARM Macro Assembler    Page 2 


   42 00000000         ;  * @note   Une fonction par GPIO
   43 00000000         ; * @param  Broche : 0 à 15
   44 00000000         ; * @retval None
   45 00000000         ;  */
   46 00000000         
   47 00000000         ;void GPIOA_Clear(char Broche);
   48 00000000                 import           GPIOA_Clear
   49 00000000         
   50 00000000         ;void GPIOB_Clear(char Broche);
   51 00000000                 import           GPIOB_Clear
   52 00000000         
   53 00000000         ;void GPIOC_Clear(char Broche);
   54 00000000                 import           GPIOC_Clear
   55 00000000         
   56 00000000                 end
   11 00000000         
   12 00000000         
   13 00000000         ; ====================== zone de réservation de données,
                         ======================================
   14 00000000         ;Section RAM (read only) :
   15 00000000                 area             mesdata,data,readonly
   16 00000000         
   17 00000000         
   18 00000000         ;Section RAM (read write):
   19 00000000                 area             maram,data,readwrite
   20 00000000         
   21 00000000 00 00   SortieSon
                               dcw              0           ; short integer sur
                                                             2 octets
   22 00000002         
   23 00000002         ;avant StartSon :
   24 00000002         ;Index dcd 0 ;integer sur 4 octets
   25 00000002         ;après StartSon :
   26 00000002 00 00 00001587 
                       Index   dcd              5511        ;on commence à la f
                                                            in du son, pour ne 
                                                            pas le jouer à chaq
                                                            ue lancement de pro
                                                            gramme 
   27 00000008         
   28 00000008         ; ======================================================
                       =========================================
   29 00000008         
   30 00000008         
   31 00000008         
   32 00000008         
   33 00000008         ;Section ROM code (read only) :  
   34 00000008                 area             moncode,code,readonly
   35 00000000         ; écrire le code ici  
   36 00000000         
   37 00000000         CallbackSon
                               proc
   38 00000000         
   39 00000000 B500            push             {lr}
   40 00000002         
   41 00000002         ;récupération des adresses des variables
   42 00000002 4A11            ldr              R2,=Index
   43 00000004 6813            ldr              R3,[R2]     ;R3 = Index
   44 00000006         



ARM Macro Assembler    Page 3 


   45 00000006         ;après StartSon : comparaison avant étude du son
   46 00000006 F241 5187       mov              R1, #5511   ;R1 = 5511 = Longeu
                                                            rSon-1
   47 0000000A 428B            cmp              R3, R1      ;regarde si R3 == R
                                                            1 soit Index == Lon
                                                            gueurSon-1  
   48 0000000C D00D            beq              reset       ;nous envoie à rese
                                                            t si R3 == R1 
   49 0000000E         
   50 0000000E 490F            ldr              R1,=Son     ;R1=adresse premièr
                                                            e composante de Son
                                                            
   51 00000010         
   52 00000010         ;récupération de la valeur du son dans r0
   53 00000010 F931 0013       ldrsh            R0,[R1,R3,lsl#1] ;s pour signé 
                                                            (copie du signe), h
                                                             pour short integer
                                                             (copie sur 2octets
                                                            ), lsl#1 (décalage 
                                                            à gauche de 1 bit) 
                                                            pour multiplier par
                                                             2 l'index
   54 00000014 F103 0301       add              R3,#1       ;incremente index
   55 00000018         ;IDEM à : ldrsh R0,[R1,R3]
   56 00000018         ; add R3,#2
   57 00000018         
   58 00000018         ;Remarque : l'adresse de la variable Son ne nous est plu
                       s utile
   59 00000018         ;donc R1 peut être utilisée pour faire des opérations
   60 00000018         
   61 00000018         ;normalisation 1
   62 00000018         ;add R0,#32768
   63 00000018         ;mov R1,#720
   64 00000018         ;mul R0,R1
   65 00000018         ;mov R1,#65535
   66 00000018         ;udiv R0,R1
   67 00000018         
   68 00000018         ;normalisation 2
   69 00000018 F04F 012D       mov              R1,#45
   70 0000001C FB00 F001       mul              R0,R1
   71 00000020 EA4F 3020       asr              R0,#12
   72 00000024 F500 70B4       add              R0,#360
   73 00000028         
   74 00000028         ;avant StartSon : comparaison après étude du son
   75 00000028 E001            b                end_callback
   76 0000002A         
   77 0000002A         reset                                ;si R3 == R1 soit s
                                                            i le son a déjà été
                                                             joué en entier 
   78 0000002A         ;avant StartSon :
   79 0000002A         ;mov R3,#0 ;remise à 0 de l'INDEX, on rejoue le son
   80 0000002A         ;après StartSon :
   81 0000002A F04F 0000       mov              R0,#0       ;on envoie 0
   82 0000002E         
   83 0000002E         end_callback
   84 0000002E         
   85 0000002E 6013            str              R3, [R2]    ;enregistrement de 
                                                            la valeur de l'INDE
                                                            X pour que les chan



ARM Macro Assembler    Page 4 


                                                            gements soient visi
                                                            bles
   86 00000030         
   87 00000030         ;Remarque : l'adresse de la variable Index ne nous est p
                       lus utile
   88 00000030         ;donc R2 peut être utilisée pour faire des opérations
   89 00000030         
   90 00000030 4A07            ldr              R2, =SortieSon
   91 00000032 6010            str              R0, [R2]    ;on met notre valeu
                                                            r du son normalisée
                                                             à l'adresse de Sor
                                                            tieSon
   92 00000034         
   93 00000034 F7FF FFFE       bl               PWM_Set_Value_TIM3_Ch3
   94 00000038         
   95 00000038 BD00            pop              {pc}
   96 0000003A                 endp
   97 0000003A         ;IDEM à : pop {lr} 
   98 0000003A         ; bx lr
   99 0000003A         ; endp
  100 0000003A         
  101 0000003A         
  102 0000003A         StartSon
                               proc
  103 0000003A         
  104 0000003A B500            push             {lr}
  105 0000003C 4A02            ldr              R2,=Index
  106 0000003E 6813            ldr              R3,[R2]     ;R3 = Index
  107 00000040 F04F 0300       mov              R3,#0       ;remise à 0 de l'IN
                                                            DEX => on joue le s
                                                            on
  108 00000044 6013            str              R3, [R2]    ;enregistrement de 
                                                            la valeur de l'INDE
                                                            X pour que les chan
                                                            gements soient visi
                                                            bles
  109 00000046 BD00            pop              {pc}
  110 00000048                 endp
  111 00000048         
  112 00000048         END
                       
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\obj\gestionson.d -o.\obj\gestionson.o -I.\RTE\_Simu -IC:\Program
data\Keil\Arm\Packs\ARM\CMSIS\5.7.0\CMSIS\Core\Include -IC:\Programdata\Keil\Ar
m\Packs\Keil\STM32F1xx_DFP\2.3.0\Device\Include --predefine="__EVAL SETA 1" --p
redefine="__MICROLIB SETA 1" --predefine="__UVISION_VERSION SETA 534" --predefi
ne="_RTE_ SETA 1" --predefine="STM32F10X_MD SETA 1" --predefine="_RTE_ SETA 1" 
--list=gestionson.lst Src\GestionSon.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

mesdata 00000000

Symbol: mesdata
   Definitions
      At line 15 in file Src\GestionSon.s
   Uses
      None
Comment: mesdata unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Index 00000004

Symbol: Index
   Definitions
      At line 26 in file Src\GestionSon.s
   Uses
      At line 7 in file Src\GestionSon.s
      At line 42 in file Src\GestionSon.s
      At line 105 in file Src\GestionSon.s

SortieSon 00000000

Symbol: SortieSon
   Definitions
      At line 21 in file Src\GestionSon.s
   Uses
      At line 6 in file Src\GestionSon.s
      At line 90 in file Src\GestionSon.s

maram 00000000

Symbol: maram
   Definitions
      At line 19 in file Src\GestionSon.s
   Uses
      None
Comment: maram unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CallbackSon 00000000

Symbol: CallbackSon
   Definitions
      At line 37 in file Src\GestionSon.s
   Uses
      At line 4 in file Src\GestionSon.s
Comment: CallbackSon used once
END 00000048

Symbol: END
   Definitions
      At line 112 in file Src\GestionSon.s
   Uses
      None
Comment: END unused
StartSon 0000003A

Symbol: StartSon
   Definitions
      At line 102 in file Src\GestionSon.s
   Uses
      At line 5 in file Src\GestionSon.s
Comment: StartSon used once
end_callback 0000002E

Symbol: end_callback
   Definitions
      At line 83 in file Src\GestionSon.s
   Uses
      At line 75 in file Src\GestionSon.s
Comment: end_callback used once
moncode 00000000

Symbol: moncode
   Definitions
      At line 34 in file Src\GestionSon.s
   Uses
      None
Comment: moncode unused
reset 0000002A

Symbol: reset
   Definitions
      At line 77 in file Src\GestionSon.s
   Uses
      At line 48 in file Src\GestionSon.s
Comment: reset used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

GPIOA_Clear 00000000

Symbol: GPIOA_Clear
   Definitions
      At line 48 in file Driver\DriverJeuLaser.inc
   Uses
      None
Comment: GPIOA_Clear unused
GPIOA_Set 00000000

Symbol: GPIOA_Set
   Definitions
      At line 30 in file Driver\DriverJeuLaser.inc
   Uses
      None
Comment: GPIOA_Set unused
GPIOB_Clear 00000000

Symbol: GPIOB_Clear
   Definitions
      At line 51 in file Driver\DriverJeuLaser.inc
   Uses
      None
Comment: GPIOB_Clear unused
GPIOB_Set 00000000

Symbol: GPIOB_Set
   Definitions
      At line 33 in file Driver\DriverJeuLaser.inc
   Uses
      None
Comment: GPIOB_Set unused
GPIOC_Clear 00000000

Symbol: GPIOC_Clear
   Definitions
      At line 54 in file Driver\DriverJeuLaser.inc
   Uses
      None
Comment: GPIOC_Clear unused
GPIOC_Set 00000000

Symbol: GPIOC_Set
   Definitions
      At line 36 in file Driver\DriverJeuLaser.inc
   Uses
      None
Comment: GPIOC_Set unused
LongueurSon 00000000

Symbol: LongueurSon
   Definitions
      At line 9 in file Src\GestionSon.s
   Uses
      None
Comment: LongueurSon unused
PWM_Set_Value_TIM3_Ch3 00000000

Symbol: PWM_Set_Value_TIM3_Ch3



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 18 in file Driver\DriverJeuLaser.inc
   Uses
      At line 93 in file Src\GestionSon.s
Comment: PWM_Set_Value_TIM3_Ch3 used once
Son 00000000

Symbol: Son
   Definitions
      At line 8 in file Src\GestionSon.s
   Uses
      At line 50 in file Src\GestionSon.s
Comment: Son used once
9 symbols
356 symbols in table
